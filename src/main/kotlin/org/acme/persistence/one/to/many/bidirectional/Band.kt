package org.acme.persistence.one.to.many.bidirectional

import java.time.LocalDate
import javax.persistence.CascadeType
import javax.persistence.Column
import javax.persistence.Entity
import javax.persistence.FetchType
import javax.persistence.GeneratedValue
import javax.persistence.GenerationType
import javax.persistence.Id
import javax.persistence.OneToMany

@Entity
data class Band(
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "BAND_ID", nullable = false, updatable = false)
    var id: Long? = null,  // Set initially to null as it's generated by the DB

    var name: String,

    @Column(name = "FORMATION_DATE")
    var formationDate: LocalDate? = null,

    @OneToMany(
        mappedBy = "band",  // Name of the field in the child Album which references this parent entity
        cascade = [CascadeType.ALL],  // Cascade any CRUD actions on this to albums too
        orphanRemoval = true
    )
    var albums: List<Album>,
) {
    private fun addAlbum(album: Album) = album.apply { albums += album }

    fun addNewAlbum(title: String, releaseDate: LocalDate) =
        addAlbum(Album(title = title, releaseDate = releaseDate, songs = listOf(), band = this))

    // Implement toString for bidirectional mappings, else you get a stack overflow due to data class's toString method
    override fun toString(): String {
        return "Band(id=$id, name='$name', formationDate=$formationDate)"
    }
}
